{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rodrigo/Documents/ofertabest/estrutura-best/src/pages/link.tsx\";\n\nvar WebView = require('react-electron-web-view');\n\n// cliten-side\n// server-side \n// static side generation \nexport var __N_SSG = true;\nexport default function Link(_ref) {\n  var product = _ref.product;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WebView, {\n      src: \"https://cursounhasdefibra.com.br/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n} //export const getServerSideProps: GetServerSideProps = async () => {\n\n_c = Link;\n\nvar _c;\n\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"sources":["/Users/rodrigo/Documents/ofertabest/estrutura-best/src/pages/link.tsx"],"names":["WebView","require","Link","product"],"mappings":";;;;AAGA,IAAMA,OAAO,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AASA;AACA;AACA;;AAEA,eAAe,SAASC,IAAT,OAAsC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AACnD,sBACE;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,GAAG,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAKD,C,CAED;;KARwBD,I","sourcesContent":["\nimport { GetStaticProps } from 'next';\nimport { stripe } from '../services/stripe';\nconst WebView = require('react-electron-web-view');\n\ninterface HomeProps {\n  product: {\n    priceId: string;\n    amount: number;\n  }\n}\n\n// cliten-side\n// server-side \n// static side generation \n\nexport default function Link({ product }: HomeProps) {\n  return (\n    <>\n        <WebView src=\"https://cursounhasdefibra.com.br/\" />\n    </>\n  )\n}\n\n//export const getServerSideProps: GetServerSideProps = async () => {\nexport const getStaticProps: GetStaticProps = async () => {\n\n  const price = await stripe.prices.retrieve('price_1IZ2mkGQXTBLLSCqnyF1M85J', {\n    expand: ['product']\n  })\n\n  const product = {\n    priceId: price.id,\n    amount: new Intl.NumberFormat('en-US',{\n      style: 'currency',\n      currency: 'USD'\n    }).format(price.unit_amount / 100),\n  }\n\n  return{\n    props: {\n      product,\n    },\n    revalidate: 60*60*24, // 24 horas\n  }\n};\n"]},"metadata":{},"sourceType":"module"}