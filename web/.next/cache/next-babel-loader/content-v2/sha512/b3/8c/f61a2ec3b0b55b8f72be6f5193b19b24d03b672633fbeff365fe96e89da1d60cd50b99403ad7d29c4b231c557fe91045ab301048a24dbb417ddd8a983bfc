{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rodrigo/Documents/ofertabest/estrutura-best/src/pages/link.tsx\";\nimport { stripe } from '../services/stripe';\nimport WebView from 'react-electron-web-view';\n// cliten-side\n// server-side \n// static side generation \nexport default function Link({\n  product\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WebView, {\n      src: \"https://cursounhasdefibra.com.br/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n} //export const getServerSideProps: GetServerSideProps = async () => {\n\nexport const getStaticProps = async () => {\n  const price = await stripe.prices.retrieve('price_1IZ2mkGQXTBLLSCqnyF1M85J', {\n    expand: ['product']\n  });\n  const product = {\n    priceId: price.id,\n    amount: new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(price.unit_amount / 100)\n  };\n  return {\n    props: {\n      product\n    },\n    revalidate: 60 * 60 * 24 // 24 horas\n\n  };\n};","map":{"version":3,"sources":["/Users/rodrigo/Documents/ofertabest/estrutura-best/src/pages/link.tsx"],"names":["stripe","WebView","Link","product","getStaticProps","price","prices","retrieve","expand","priceId","id","amount","Intl","NumberFormat","style","currency","format","unit_amount","props","revalidate"],"mappings":";;;AAEA,SAASA,MAAT,QAAuB,oBAAvB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AASA;AACA;AACA;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAsC;AACnD,sBACE;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,GAAG,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAKD,C,CAED;;AACA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AAExD,QAAMC,KAAK,GAAG,MAAML,MAAM,CAACM,MAAP,CAAcC,QAAd,CAAuB,gCAAvB,EAAyD;AAC3EC,IAAAA,MAAM,EAAE,CAAC,SAAD;AADmE,GAAzD,CAApB;AAIA,QAAML,OAAO,GAAG;AACdM,IAAAA,OAAO,EAAEJ,KAAK,CAACK,EADD;AAEdC,IAAAA,MAAM,EAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA8B;AACpCC,MAAAA,KAAK,EAAE,UAD6B;AAEpCC,MAAAA,QAAQ,EAAE;AAF0B,KAA9B,EAGLC,MAHK,CAGEX,KAAK,CAACY,WAAN,GAAoB,GAHtB;AAFM,GAAhB;AAQA,SAAM;AACJC,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK,KADH;AAIJgB,IAAAA,UAAU,EAAE,KAAG,EAAH,GAAM,EAJd,CAIkB;;AAJlB,GAAN;AAMD,CApBM","sourcesContent":["\nimport { GetStaticProps } from 'next';\nimport { stripe } from '../services/stripe';\nimport styles from './home.module.scss';\nimport WebView from 'react-electron-web-view';\n\ninterface HomeProps {\n  product: {\n    priceId: string;\n    amount: number;\n  }\n}\n\n// cliten-side\n// server-side \n// static side generation \n\nexport default function Link({ product }: HomeProps) {\n  return (\n    <>\n        <WebView src=\"https://cursounhasdefibra.com.br/\" />\n    </>\n  )\n}\n\n//export const getServerSideProps: GetServerSideProps = async () => {\nexport const getStaticProps: GetStaticProps = async () => {\n\n  const price = await stripe.prices.retrieve('price_1IZ2mkGQXTBLLSCqnyF1M85J', {\n    expand: ['product']\n  })\n\n  const product = {\n    priceId: price.id,\n    amount: new Intl.NumberFormat('en-US',{\n      style: 'currency',\n      currency: 'USD'\n    }).format(price.unit_amount / 100),\n  }\n\n  return{\n    props: {\n      product,\n    },\n    revalidate: 60*60*24, // 24 horas\n  }\n};\n"]},"metadata":{},"sourceType":"module"}